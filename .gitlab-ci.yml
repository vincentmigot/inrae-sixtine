 
########################
##  GLOBAL VARIABLES 
########################
variables:
 GIT_DEPTH: 5
 GIT_OPTIONS: "--allow-unrelated-histories"
 # GLOBAL
 # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
 # when running from the command line.
 MAVEN_CLI_OPTS: "--batch-mode --show-version "
 BUILD_PATH: "opensilex-release/target/opensilex-release"
 # DEFAULT SERVER MAVEN VERSION
 MVN_VERSION: 3.6.3
 # DEFAULT SERVER JAVA VERSION
 JAVA_VERSION: 11
 REVISION: 'INSTANCE-SNAPSHOT'
 # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
 # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
 MAVEN_CACHE_FOLDER: "$CI_PROJECT_DIR/../.m2/repository"
 MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
 YARN_CACHE_FOLDER: "$CI_PROJECT_DIR/../cache_yarn"
 NODE_MODULE_DEV_CACHE: "$CI_PROJECT_DIR/../node_modules"
 NODE_MODULE_FRONT_CACHE: "$CI_PROJECT_DIR/../opensilex-front/front/node_modules"
 NODE_MODULE_CORE_CACHE: "$CI_PROJECT_DIR/../opensilex-core/front/node_modules"
 NODE_MODULE_REST_CACHE: "$CI_PROJECT_DIR/../opensilex-rest/front/node_modules"
 NODE_MODULE_PHIS_CACHE: "$CI_PROJECT_DIR/../phis-ws/phis2ws/front/node_modules"
 NODE_MODULE_SIXTINE_CACHE: "$CI_PROJECT_DIR/front/node_modules"
 NODE_CACHE: "$CI_PROJECT_DIR/../.node"
 EMBDED_MONGO_CACHE: "/root/.embedmongo/"

########################
##  CACHE TEMPLATE
########################

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_BUILD_JOB_NAME"'
.cache_dependencies: &cache_dependencies
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - $YARN_CACHE_FOLDER
      - $MAVEN_CACHE_FOLDER
      - $NODE_MODULE_DEV_CACHE
      - $NODE_MODULE_FRONT_CACHE
      - $NODE_MODULE_CORE_CACHE
      - $NODE_MODULE_REST_CACHE
      - $NODE_CACHE
      - $NODE_MODULE_PHIS_CACHE
      - $NODE_MODULE_SIXTINE_CACHE
      - $EMBDED_MONGO_CACHE

########################
##  BUILD TEMPLATE
########################

.build:instance: &build_template_with_opensilex
  <<: *cache_dependencies
  before_script:
    # download built artifacts from opensilex-dev
    - cd $CI_PROJECT_DIR/.. 
    - rm -rf $REVISION
    - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://forgemia.inra.fr/api/v4/projects/1675/jobs/artifacts/master/download?job=opensilex:build"'
    - unzip -o artifacts.zip
#    - ls $REVISION/tests
    - cd $REVISION
     # install opensilex tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-tests.jar" "-DpomFile=./tests/opensilex-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install sparql tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-sparql-tests.jar" "-DpomFile=./tests/opensilex-sparql-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install nosql tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-nosql-tests.jar" "-DpomFile=./tests/opensilex-nosql-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install fs tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-fs-tests.jar" "-DpomFile=./tests/opensilex-fs-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install rest tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-rest-tests.jar" "-DpomFile=./tests/opensilex-rest-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install core tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-core-tests.jar" "-DpomFile=./tests/opensilex-core-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install front tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/opensilex-front-tests.jar" "-DpomFile=./tests/opensilex-front-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
#    # install phis tests
#    - mvn install:install-file $MAVEN_CLI_OPTS "-Dfile=./tests/phis-tests.jar" "-DpomFile=./tests/phis-pom.xml" "-Dclassifier=tests" "-Dversion=$REVISION"
    
    # clone original opensilex-dev sources
    - rm -rf $CI_PROJECT_DIR/../opensilex-dev
    - mkdir -p $CI_PROJECT_DIR/../opensilex-dev
    - cd $CI_PROJECT_DIR/../
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@forgemia.inra.fr/OpenSILEX/opensilex-dev.git
    - cd opensilex-dev
    # Ensure to load same commit as used to generate opensilex-dev artifact
    - |
      if [ ! -z "$COMMIT_SHA_OPENSILEX_DEV" ]; then
        git checkout $COMMIT_SHA_OPENSILEX_DEV
      fi
    - cd phis-ws
    - git init
    # TODO: ensure to load same commit as used to generate phisws artifact
    - git pull https://gitlab-ci-token:${CI_JOB_TOKEN}@forgemia.inra.fr/OpenSILEX/phis-ws.git modularity
    - cp -rf $CI_PROJECT_DIR/../opensilex-dev/* $CI_PROJECT_DIR/..
    - cd $CI_PROJECT_DIR/..
    # Initialize opensilex-dev sources for module compilation
    - mvn install $MAVEN_CLI_OPTS -Pfor-module
  stage: build
  image: maven:$MVN_VERSION-jdk-$JAVA_VERSION
  except:
    - schedules
  artifacts:
    expire_in: "3 week"  
  artifacts:
    paths:
      - $CI_PROJECT_DIR/$REVISION
      

########################
##  SIXTINE BUILD INSTANCE
######################## 

sixtine:build:
  <<: *build_template_with_opensilex
  script:
    - mkdir -p $CI_PROJECT_DIR/../opensilex-dev/inrae-sixtine
    - ls $CI_PROJECT_DIR/../opensilex-dev/inrae-sixtine
    - mv $CI_PROJECT_DIR $CI_PROJECT_DIR/../opensilex-dev/inrae-sixtine
    - ls $CI_PROJECT_DIR/../opensilex-dev/inrae-sixtine
    - cd $CI_PROJECT_DIR/../opensilex-dev/inrae-sixtine
    - mvn install $MAVEN_CLI_OPTS -Drevision=$REVISION
    - mv $CI_PROJECT_DIR/inrae-sixtine/target/inrae-sixtine-$REVISION.jar $CI_PROJECT_DIR/../$REVISION/modules/inrae-sixtine.jar
  artifacts:
    paths:
      - $CI_PROJECT_DIR/../$REVISION